"""
Django settings for bckend project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
# importing the required libraries
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'eb6fj#9mkxyyw18_xb+^ejd=yw4u3kih2-tb-dfhg7)!e6!7qw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# For test purpose all hosts are allowed ['*']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'rest_framework', # app for django rest framework
	'rest_framework.authtoken', # authentication app from rest_framework
	'behave_django', # behave_django app is a wrapper for behave for django projects
	'django_filters', # app for django filters to apply filters on model objects
	'django_countries', # app to use CountryField in models to validate correct country name input
	'db_api.apps.DbApiConfig', # our main app 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bckend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bckend.wsgi.application'

AUTH_USER_MODEL = 'db_api.Customer'

ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email' # overriding the username field with email for our custom user model 'Customer'

# For user authentication, we have specified our custom serializers here 
REST_AUTH_SERIALIZERS = {
    "USER_DETAILS_SERIALIZER": "db_api.serializers.CustomerLoginSerializer",
}
REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": "db_api.serializers.CustomeRegisterSerializer",
}

# redirect url path from login page
LOGIN_REDIRECT_URL = ('/api/v1/bookcollection')

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# Using default sqllite db here 
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATETIME_FORMAT = '%Y-%m-%dT%H:%M:%S.%fZ' 


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
#'rest_framework.authentication.BasicAuthentication',

# all the rest framework filter, exception_handlers, and authentication classes are declared here.
REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
	'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
	'DEFAULT_AUTHENTICATION_CLASSES':['rest_framework.permissions.IsAuthenticatedOrReadOnly'],
	'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
		'rest_framework.authentication.SessionAuthentication',
    ),
}
